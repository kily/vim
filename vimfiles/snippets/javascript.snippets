#-----------------------------------------------
# snippets for snipMeta by kily
# update: 2012-1-2
#-----------------------------------------------

# object
snippet {}
	{
		${1}
	};
# comments
snippet /*
	/**
	 * ${1:模块说明}
	 */${2}
# an fn
snippet ()
	(function() {
		${1}
	})(); 	 
# an fn with args
snippet ()()
	(function( ${2:k} ) {
		${1}
	})( ${3:i} ); 
# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	}
# Function
snippet fun
	function ${1:function_name} ( ${2:argument} ) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {
		${2}
	}
# if
snippet if
	if ( ${1:true} ) {
		${2}
	}
# else
snippet else
	else {
		${1}
	}	
# if ... else
snippet ife
	if ( ${1:true} ) {
		${2}
	} else {
		${3}
	}
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch( ${1:expression} ) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for ( var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++} ) {
		${4:$1[$2]}
	}
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	}
# while (...) {...}
snippet wh
	while ( ${1:/* condition */} ) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while ( ${1:/* condition */} );
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {
		${2}
	}, ${1:10})
# setInterval function
snippet interval
	setInterval(function() {
		${2}
	}, ${1:10})
# Get Elements
snippet get
	${2:document}.getElementById('${1}')${3}
snippet gett
	${2:document}.getElementsByTagName('${1}')${3}
# jQuery Ready fn
snippet $$
	$(function() {
		${1}
	});
