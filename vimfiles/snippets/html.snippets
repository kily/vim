#-----------------------------------------------
# snippets for snipMeta by kily
# update: 2012-1-2
#-----------------------------------------------

#-----------------------------------------------
# Unicode entities
#-----------------------------------------------
snippet nbs
	&nbsp;
# ←
snippet left
	&#x2190;
# →
snippet right
	&#x2192;
# ↑
snippet up
	&#x2191;
# ↓
snippet down
	&#x2193;
#-----------------------------------------------
# doctype
#-----------------------------------------------
snippet html:xt
	<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
	<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
	<head>
		<meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
		<title></title>
	</head>
	<body>
		${1}
	</body>
	</html>
snippet html:5
	<!DOCTYPE HTML>
	<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<title></title>
	</head>
	<body>
		${1}
	</body>
	</html>
#-----------------------------------------------
# head elements
#-----------------------------------------------
snippet style
	<style type="text/css">
		${1}
	</style>
snippet link
	<link rel="stylesheet" href="${1:style}.css" />${2}
snippet meta
	<meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
snippet script
	<script type="text/javascript">
	//<![CDATA[
		${1}
	//]]>	
	</script>${2}
snippet scriptsrc
	<script src="${1}.js" type="text/javascript"></script>${2}
# jQuery Ready fn with Script
snippet script$
	<script type="text/javascript">
	//<![CDATA[
		$(function() {
			${1}
		});	
	//]]>	
	</script>${2}
# jQuery Ready fn with Script
snippet $
	$(function() {
		${1}
	});	

#-----------------------------------------------
# form elements
#-----------------------------------------------
snippet input:t
	<input class="inp-t" type="text" />
snippet input:s
	<input class="inp-s" type="submit" value="${1:确定}" />	
snippet input:b
	<input class="inp-b" type="button" value="${1:确定}" />	
snippet input:r
	<input class="inp-r" type="radio" />
snippet input:c
	<input class="inp-c" type="checkbox" />
snippet input:f
	<input class="inp-f" type="file" />	
snippet textarea
	<textarea rows="5" cols="50"></textarea>
	
#-----------------------------------------------
# other elements
#-----------------------------------------------
snippet table
	<table>
		<colgroup>
			<col width="" />
		</colgroup>
		<thead>
			<tr>
				<th>${1}</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td></td>
			</tr>
		</tbody>
	</table>
snippet tablenohead
	<table>
		<colgroup>
			<col width="" />
		</colgroup>	
		<tbody>
			<tr>
				<td>${1}</td>
			</tr>
		</tbody>
	</table>
snippet colgroup
	<colgroup>
		<col width="${1}" />
	</colgroup>	

#-----------------------------------------------
# html layout
#-----------------------------------------------	
snippet classical
	<div class="header">
		<div class="head">
			head
		</div>
		
	</div><!--.header-->

	<div class="container">
		<div class="main clearfix">
			<div class="content fl">
				content
			</div>
			
			<div class="sidebar fr">
				sidebar
			</div>
			
		</div><!--.main-->
		
	</div><!--.container-->

	<div class="footer">
		<div class="foot">
			foot
		</div>
		
	</div><!--.footer-->

#-----------------------------------------------
# JavaScript
#-----------------------------------------------	
# object
snippet {}
	{
		${1}
	};
# comments
snippet /*
	/**
	 * ${1:模块说明}
	 */${2}
# an fn
snippet ()
	(function() {
		${1}
	})(); 	 
# an fn with args
snippet ()()
	(function( ${2:k} ) {
		${1}
	})( ${3:i} ); 
# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	}
# Function
snippet fun
	function ${1:function_name} ( ${2:argument} ) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {
		${2}
	}
# if
snippet if
	if ( ${1:true} ) {
		${2}
	}
# else
snippet else
	else {
		${1}
	}	
# if ... else
snippet ife
	if ( ${1:true} ) {
		${2}
	} else {
		${3}
	}
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch( ${1:expression} ) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for ( var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++} ) {
		${4:$1[$2]}
	}
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	}
# while (...) {...}
snippet wh
	while ( ${1:/* condition */} ) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while ( ${1:/* condition */} );
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {
		${2}
	}, ${1:10})
# setIntervel function
snippet interval
	setIntervel(function() {
		${2}
	}, ${1:10})
# Get Elements
snippet get
	${2:document}.getElementById('${1}')${3}
snippet gett
	${2:document}.getElementsByTagName('${1}')${3}
# jQuery Ready fn
snippet $$
	$(function() {
		${1}
	});
	

